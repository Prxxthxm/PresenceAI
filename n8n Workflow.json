{
  "name": "PresenceIQ",
  "nodes": [
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "attendance",
          "mode": "list",
          "cachedResultName": "attendance"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "check_out": "={{$json[\"timestamp\"]}}",
            "date": "={{$json[\"date\"]}}",
            "employee_id": "={{$json[\"employee_id\"]}}"
          },
          "matchingColumns": [
            "employee_id",
            "date"
          ],
          "schema": [
            {
              "id": "employee_id",
              "displayName": "employee_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "check_in",
              "displayName": "check_in",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "check_out",
              "displayName": "check_out",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1120,
        340
      ],
      "id": "9f49f7fa-9689-4807-8cde-b1aa96dc7ec1",
      "name": "Check Out",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "attendance",
          "mode": "list",
          "cachedResultName": "attendance"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "employee_id": "={{$json[\"employee_id\"]}}",
            "date": "={{$json[\"date\"]}}",
            "status": "Present",
            "check_in": "={{$json[\"timestamp\"]}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "employee_id",
              "displayName": "employee_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "check_in",
              "displayName": "check_in",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "check_out",
              "displayName": "check_out",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1120,
        540
      ],
      "id": "07cc5c0c-e4a6-48ab-9214-e0755f66b372",
      "name": "Check In",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM employees;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        260,
        940
      ],
      "id": "24bcb36b-9225-467a-af52-d7a457e0dfb0",
      "name": "Obtain Employee List",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        480,
        940
      ],
      "id": "799f0679-3a22-40e8-8c11-f407a416391f",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM attendance\nWHERE employee_id = '{{ $json[\"employee_id\"] }}' AND date = CURRENT_DATE;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        700,
        940
      ],
      "id": "f3690576-a96f-49b5-b884-1a4f5a8936ff",
      "name": "Retrieve Employee Records",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE employees\nSET total_absences = total_absences + 1\nWHERE employee_id = '{{$json.employee_id}}'\nRETURNING employee_id, name, email, total_absences;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1580,
        880
      ],
      "id": "b70050ee-956c-400f-ad55-89f748b3377a",
      "name": "Update Records",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "a34f9944-98aa-4d91-977a-9173e7b5e25d",
              "leftValue": "={{ $json[\"total_absences\"] }}",
              "rightValue": "4",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1800,
        880
      ],
      "id": "a81d330f-a5f7-4f56-8c91-91932d239379",
      "name": "Warning Mail Threshold"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "d861f2c6-9216-4c10-bbca-08c8816bd3ce",
              "leftValue": "={{ $json[\"total_absences\"]}}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2020,
        820
      ],
      "id": "cb202750-6d78-4084-9c64-40ba323cc1b2",
      "name": "Admin Report"
    },
    {
      "parameters": {
        "sendTo": "f20240610@pilani.bits-pilani.ac.in",
        "subject": "Escalation: Repeated Absences Detected",
        "message": "=<p>Dear Admin,</p>  <p>Employee <strong>{{$json[\"employee_id\"]}}</strong> has been marked absent more than 5 times.</p> <p>Please review and take necessary action.</p>  <p>Regards,<br>HR Automation System</p>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2240,
        820
      ],
      "id": "bcb8b6ae-b9d3-4a1a-b56f-d3e3a5a02616",
      "name": "Report Mail",
      "webhookId": "aff35eea-2c3a-4fec-8ffa-29359e7d5de8",
      "credentials": {
        "gmailOAuth2": {
          "id": "OhLO6aNJ90qsy8uI",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{$json[\"email\"]}}",
        "subject": "Attendance Violation",
        "message": "=<p>Dear {{$json[\"name\"]}},</p>  <p>You have been marked absent <strong>4 times</strong>.</p> <p>Please ensure regular attendance to avoid further action.</p>  <p>Regards,<br>HR Automation</p>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2020,
        1040
      ],
      "id": "e98ff0de-90cb-498b-a9d4-4d46c9744a30",
      "name": "Warning Mail",
      "webhookId": "ba8f06e8-9781-47e9-a77f-f208c072ca49",
      "credentials": {
        "gmailOAuth2": {
          "id": "OhLO6aNJ90qsy8uI",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/attendance",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -200,
        440
      ],
      "id": "5d61641b-00d2-4801-a1b5-e1c115dba9a8",
      "name": "Face Recognition Input",
      "webhookId": "7208ce83-c2b1-4201-b16a-9f735f883ad2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23,
              "triggerAtMinute": 59
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        40,
        940
      ],
      "id": "78e4bfc3-0b11-4bdf-a764-a8d53cc98960",
      "name": "Daily Absence Report"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtHour": 23,
              "triggerAtMinute": 59
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1400,
        380
      ],
      "id": "1ffff126-fcbe-453d-a242-3324795ad783",
      "name": "Weekly Report"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        2080,
        540
      ],
      "id": "08f11267-4f84-4cf5-b472-ee577d2eda0a",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "L7huLN1aTrJApTd0",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "f20240610@pilani.bits-pilani.ac.in",
        "subject": "Weekly Attendance Summary Report",
        "message": "=<p>Dear Admin,</p>  <p>Here is the AI-generated summary of employee attendance for the past week:</p>  <blockquote> {{ $json[\"text\"]}} </blockquote>  <p>Regards,<br>HR Automation System</p>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2380,
        380
      ],
      "id": "50013641-fee7-4162-9dd8-b5d908a02bdb",
      "name": "Mail Report",
      "webhookId": "edc415fb-4fcc-4dbe-b467-a6f92219d63a",
      "credentials": {
        "gmailOAuth2": {
          "id": "OhLO6aNJ90qsy8uI",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an HR assistant. Generate a professional weekly attendance report using the employee data below:\n\n{{ JSON.stringify($json.employees, null, 2) }}\n\nEach employee has a name, email, and total number of absences. Assume a 5-day work week.\n\nInstructions:\n- Calculate absenteeism rate = (absences / 5) * 100 and round to nearest whole number.\n- Present data in a clean HTML table with columns: Name, Email, Total Absences, Absenteeism Rate (%).\n- Bold names of employees with:\n  - High absenteeism (>2 absences)\n  - Perfect attendance (0 absences)\n\nAt the end, provide:\n\n- A summary paragraph inside `<p>` tags stating overall attendance status.\n- A short recommendation.\n- A courteous note inside `<p>` tags.\n\nThe output must be fully enclosed within `<html><body> ... </body></html>`. Do not include markdown (`**`) anywhere. Do not add any text before or after the HTML.",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2040,
        380
      ],
      "id": "96cf4063-3d43-4979-9600-1c3824ad72fc",
      "name": "Report Generation Prompt"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "attendance",
          "mode": "list",
          "cachedResultName": "attendance"
        },
        "where": {
          "values": [
            {
              "column": "employee_id",
              "value": "={{$json[\"employee_id\"]}}"
            },
            {
              "column": "date",
              "value": "={{$json[\"date\"]}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        240,
        500
      ],
      "id": "88309e3e-2183-47c3-b20a-c8e84104fc89",
      "name": "Select Employee Record",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT name, email, total_absences\nFROM employees\nORDER BY total_absences DESC;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1620,
        380
      ],
      "id": "c6452296-7e01-479f-809c-6782d806abf0",
      "name": "Access database",
      "credentials": {
        "postgres": {
          "id": "Bszh6psdYW4ZjgCK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Combine all items into a single array under one key\nreturn [\n  {\n    json: {\n      employees: items.map(item => item.json)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        380
      ],
      "id": "fbc8f4af-343c-46ca-b584-d7b75ae898c1",
      "name": "Collate Data"
    },
    {
      "parameters": {
        "content": "# Face ID Based Attendance \n",
        "height": 460,
        "width": 1580,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        260
      ],
      "id": "aa57ecb1-361c-48e7-ad3f-b2e0560e32f0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Weekly Report Generation",
        "height": 460,
        "width": 1240,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        260
      ],
      "id": "0aab7c90-518d-4a17-ae87-e9ec3eb3a50f",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Daily Absence Analysis",
        "height": 500,
        "width": 2860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        760
      ],
      "id": "7a120b5b-9992-474d-8cfe-e32f3e9e7d86",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      isEmpty: Object.keys(items[0].json).length === 0\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        940
      ],
      "id": "d758e272-a175-4d3b-9449-0fb5f53fef09",
      "name": "Check Employee Absence"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "query": "SELECT\n  input1.employee_id,\n  input1.name,\n  input1.email,\n  input1.total_absences,\n  input2.isEmpty\nFROM input1, input2;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1140,
        880
      ],
      "id": "980ea2c3-8d7d-43ef-bf64-3420b7b80487",
      "name": "Merge Input"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b1a02a43-c3ba-46b3-b70e-44b07a135b7e",
              "leftValue": "={{ $json.isEmpty }}",
              "rightValue": 1,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1360,
        880
      ],
      "id": "a78064ad-7c22-4590-be5a-df8399e17e1b",
      "name": "Check Absence"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      isEmpty: Object.keys(items[0].json).length === 0\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        500
      ],
      "id": "982a4185-ea4d-40f9-9d8a-c7ee411134f6",
      "name": "Check Employee Presence"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"employee_id\": \"{{$json.employee_id}}\",\n  \"timestamp\": \"{{$json.timestamp.split('T')[1].split('.')[0]}}\",\n  \"date\": \"{{$json.timestamp.split('T')[0]}}\"\n}\n",
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        20,
        440
      ],
      "id": "d48f4128-8001-4443-9989-009a273ba33f",
      "name": "Format Timestamp"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b1a02a43-c3ba-46b3-b70e-44b07a135b7e",
              "leftValue": "={{ $json.isEmpty }}",
              "rightValue": 1,
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        440
      ],
      "id": "8d43423c-aafc-47ee-ac39-849885f6735c",
      "name": "Check Presence"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "query": "SELECT\n  input1.employee_id,\n  input1.name,\n  input1.email,\n  input1.total_absences,\n  input2.isEmpty\nFROM input1, input2;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        680,
        440
      ],
      "id": "0a925863-7cd8-4ebd-ae36-8f739f2af325",
      "name": "Collate Input"
    }
  ],
  "pinData": {},
  "connections": {
    "Obtain Employee List": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Retrieve Employee Records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Employee Records": {
      "main": [
        [
          {
            "node": "Check Employee Absence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Records": {
      "main": [
        [
          {
            "node": "Warning Mail Threshold",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Warning Mail Threshold": {
      "main": [
        [
          {
            "node": "Warning Mail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin Report": {
      "main": [
        [
          {
            "node": "Report Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Warning Mail": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Face Recognition Input": {
      "main": [
        [
          {
            "node": "Format Timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Absence Report": {
      "main": [
        [
          {
            "node": "Obtain Employee List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Report": {
      "main": [
        [
          {
            "node": "Access database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Report Generation Prompt",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Report Generation Prompt": {
      "main": [
        [
          {
            "node": "Mail Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Employee Record": {
      "main": [
        [
          {
            "node": "Check Employee Presence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Access database": {
      "main": [
        [
          {
            "node": "Collate Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Collate Data": {
      "main": [
        [
          {
            "node": "Report Generation Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Employee Absence": {
      "main": [
        [
          {
            "node": "Merge Input",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Input": {
      "main": [
        [
          {
            "node": "Check Absence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Absence": {
      "main": [
        [
          {
            "node": "Update Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Employee Presence": {
      "main": [
        [
          {
            "node": "Collate Input",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Format Timestamp": {
      "main": [
        [
          {
            "node": "Select Employee Record",
            "type": "main",
            "index": 0
          },
          {
            "node": "Collate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Presence": {
      "main": [
        [
          {
            "node": "Check Out",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check In",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Collate Input": {
      "main": [
        [
          {
            "node": "Check Presence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "91648a26-a8a4-4f9c-aecd-d6f283f267f3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e8b92e4983279bf42e0a88013e663557bd8b0d6fbeb35601b8c32a99d1af0fc0"
  },
  "id": "KwnnqI5tsjXLelmE",
  "tags": []
}
